// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { PairingResponseError } from '../../../solarxr-protocol/device/pairing/pairing-response-error';


export class PairingResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):PairingResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPairingResponse(bb:flatbuffers.ByteBuffer, obj?:PairingResponse):PairingResponse {
  return (obj || new PairingResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPairingResponse(bb:flatbuffers.ByteBuffer, obj?:PairingResponse):PairingResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PairingResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

error():PairingResponseError {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : PairingResponseError.NONE;
}

static startPairingResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addError(builder:flatbuffers.Builder, error:PairingResponseError) {
  builder.addFieldInt8(0, error, PairingResponseError.NONE);
}

static endPairingResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPairingResponse(builder:flatbuffers.Builder, error:PairingResponseError):flatbuffers.Offset {
  PairingResponse.startPairingResponse(builder);
  PairingResponse.addError(builder, error);
  return PairingResponse.endPairingResponse(builder);
}

unpack(): PairingResponseT {
  return new PairingResponseT(
    this.error()
  );
}


unpackTo(_o: PairingResponseT): void {
  _o.error = this.error();
}
}

export class PairingResponseT {
constructor(
  public error: PairingResponseError = PairingResponseError.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PairingResponse.createPairingResponse(builder,
    this.error
  );
}
}
