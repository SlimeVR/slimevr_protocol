// automatically generated by the FlatBuffers compiler, do not modify

import { PingResponse, PingResponseT } from '../../solarxr-protocol/device/ping-response';
import { DeviceStatus, DeviceStatusT } from '../../solarxr-protocol/device/packets/device-status';
import { ImuMovement, ImuMovementT } from '../../solarxr-protocol/device/packets/imu-movement';
import { ImuStatus, ImuStatusT } from '../../solarxr-protocol/device/packets/imu-status';
import { PairingInfo, PairingInfoT } from '../../solarxr-protocol/device/pairing/pairing-info';
import { PairingResponse, PairingResponseT } from '../../solarxr-protocol/device/pairing/pairing-response';


export enum ServerBoundMessage{
  NONE = 0,
  solarxr_protocol_device_pairing_PairingInfo = 1,
  solarxr_protocol_device_pairing_PairingResponse = 2,
  PingResponse = 3,
  solarxr_protocol_device_packets_DeviceStatus = 4,
  solarxr_protocol_device_packets_ImuStatus = 5,
  solarxr_protocol_device_packets_ImuMovement = 6
}

export function unionToServerBoundMessage(
  type: ServerBoundMessage,
  accessor: (obj:DeviceStatus|ImuMovement|ImuStatus|PairingInfo|PairingResponse|PingResponse) => DeviceStatus|ImuMovement|ImuStatus|PairingInfo|PairingResponse|PingResponse|null
): DeviceStatus|ImuMovement|ImuStatus|PairingInfo|PairingResponse|PingResponse|null {
  switch(ServerBoundMessage[type]) {
    case 'NONE': return null; 
    case 'solarxr_protocol_device_pairing_PairingInfo': return accessor(new PairingInfo())! as PairingInfo;
    case 'solarxr_protocol_device_pairing_PairingResponse': return accessor(new PairingResponse())! as PairingResponse;
    case 'PingResponse': return accessor(new PingResponse())! as PingResponse;
    case 'solarxr_protocol_device_packets_DeviceStatus': return accessor(new DeviceStatus())! as DeviceStatus;
    case 'solarxr_protocol_device_packets_ImuStatus': return accessor(new ImuStatus())! as ImuStatus;
    case 'solarxr_protocol_device_packets_ImuMovement': return accessor(new ImuMovement())! as ImuMovement;
    default: return null;
  }
}

export function unionListToServerBoundMessage(
  type: ServerBoundMessage, 
  accessor: (index: number, obj:DeviceStatus|ImuMovement|ImuStatus|PairingInfo|PairingResponse|PingResponse) => DeviceStatus|ImuMovement|ImuStatus|PairingInfo|PairingResponse|PingResponse|null, 
  index: number
): DeviceStatus|ImuMovement|ImuStatus|PairingInfo|PairingResponse|PingResponse|null {
  switch(ServerBoundMessage[type]) {
    case 'NONE': return null; 
    case 'solarxr_protocol_device_pairing_PairingInfo': return accessor(index, new PairingInfo())! as PairingInfo;
    case 'solarxr_protocol_device_pairing_PairingResponse': return accessor(index, new PairingResponse())! as PairingResponse;
    case 'PingResponse': return accessor(index, new PingResponse())! as PingResponse;
    case 'solarxr_protocol_device_packets_DeviceStatus': return accessor(index, new DeviceStatus())! as DeviceStatus;
    case 'solarxr_protocol_device_packets_ImuStatus': return accessor(index, new ImuStatus())! as ImuStatus;
    case 'solarxr_protocol_device_packets_ImuMovement': return accessor(index, new ImuMovement())! as ImuMovement;
    default: return null;
  }
}

