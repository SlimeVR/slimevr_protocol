// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class PingResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):PingResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPingResponse(bb:flatbuffers.ByteBuffer, obj?:PingResponse):PingResponse {
  return (obj || new PingResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPingResponse(bb:flatbuffers.ByteBuffer, obj?:PingResponse):PingResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PingResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startPingResponse(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endPingResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPingResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  PingResponse.startPingResponse(builder);
  return PingResponse.endPingResponse(builder);
}

unpack(): PingResponseT {
  return new PingResponseT();
}


unpackTo(_o: PingResponseT): void {}
}

export class PingResponseT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PingResponse.createPingResponse(builder);
}
}
