// automatically generated by the FlatBuffers compiler, do not modify

import { PingRequest, PingRequestT } from '../../solarxr-protocol/device/ping-request';
import { DiscoverRequest, DiscoverRequestT } from '../../solarxr-protocol/device/pairing/discover-request';
import { PairingRequest, PairingRequestT } from '../../solarxr-protocol/device/pairing/pairing-request';


export enum DeviceBoundMessage{
  NONE = 0,
  solarxr_protocol_device_pairing_DiscoverRequest = 1,
  solarxr_protocol_device_pairing_PairingRequest = 2,
  PingRequest = 3
}

export function unionToDeviceBoundMessage(
  type: DeviceBoundMessage,
  accessor: (obj:DiscoverRequest|PairingRequest|PingRequest) => DiscoverRequest|PairingRequest|PingRequest|null
): DiscoverRequest|PairingRequest|PingRequest|null {
  switch(DeviceBoundMessage[type]) {
    case 'NONE': return null; 
    case 'solarxr_protocol_device_pairing_DiscoverRequest': return accessor(new DiscoverRequest())! as DiscoverRequest;
    case 'solarxr_protocol_device_pairing_PairingRequest': return accessor(new PairingRequest())! as PairingRequest;
    case 'PingRequest': return accessor(new PingRequest())! as PingRequest;
    default: return null;
  }
}

export function unionListToDeviceBoundMessage(
  type: DeviceBoundMessage, 
  accessor: (index: number, obj:DiscoverRequest|PairingRequest|PingRequest) => DiscoverRequest|PairingRequest|PingRequest|null, 
  index: number
): DiscoverRequest|PairingRequest|PingRequest|null {
  switch(DeviceBoundMessage[type]) {
    case 'NONE': return null; 
    case 'solarxr_protocol_device_pairing_DiscoverRequest': return accessor(index, new DiscoverRequest())! as DiscoverRequest;
    case 'solarxr_protocol_device_pairing_PairingRequest': return accessor(index, new PairingRequest())! as PairingRequest;
    case 'PingRequest': return accessor(index, new PingRequest())! as PingRequest;
    default: return null;
  }
}

