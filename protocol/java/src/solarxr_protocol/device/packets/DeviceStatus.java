// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.device.packets;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class DeviceStatus extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static DeviceStatus getRootAsDeviceStatus(ByteBuffer _bb) { return getRootAsDeviceStatus(_bb, new DeviceStatus()); }
  public static DeviceStatus getRootAsDeviceStatus(ByteBuffer _bb, DeviceStatus obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DeviceStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int batteryPercentage() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public short rssi() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createDeviceStatus(FlatBufferBuilder builder,
      int batteryPercentage,
      short rssi) {
    builder.startTable(2);
    DeviceStatus.addRssi(builder, rssi);
    DeviceStatus.addBatteryPercentage(builder, batteryPercentage);
    return DeviceStatus.endDeviceStatus(builder);
  }

  public static void startDeviceStatus(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addBatteryPercentage(FlatBufferBuilder builder, int batteryPercentage) { builder.addByte(0, (byte) batteryPercentage, (byte) 0); }
  public static void addRssi(FlatBufferBuilder builder, short rssi) { builder.addShort(1, rssi, 0); }
  public static int endDeviceStatus(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DeviceStatus get(int j) { return get(new DeviceStatus(), j); }
    public DeviceStatus get(DeviceStatus obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public DeviceStatusT unpack() {
    DeviceStatusT _o = new DeviceStatusT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(DeviceStatusT _o) {
    int _oBatteryPercentage = batteryPercentage();
    _o.setBatteryPercentage(_oBatteryPercentage);
    short _oRssi = rssi();
    _o.setRssi(_oRssi);
  }
  public static int pack(FlatBufferBuilder builder, DeviceStatusT _o) {
    if (_o == null) return 0;
    return createDeviceStatus(
      builder,
      _o.getBatteryPercentage(),
      _o.getRssi());
  }
}

